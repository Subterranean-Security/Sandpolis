//============================================================================//
//                                                                            //
//                Copyright Â© 2015 - 2020 Subterranean Security               //
//                                                                            //
//  This source file is subject to the terms of the Mozilla Public License    //
//  version 2. You may not use this file except in compliance with the MPL    //
//  as published by the Mozilla Foundation at:                                //
//                                                                            //
//    https://mozilla.org/MPL/2.0                                             //
//                                                                            //
//=========================================================S A N D P O L I S==//

plugins {
	id "org.openbakery.xcode-plugin" version "0.19.1"
}

xcodebuild {
	scheme = 'Sandpolis'
	target = 'Sandpolis'

	destination {
		platform = 'iOS Simulator'
		name = 'iPhone X'
		os = '12.2'
	}
}

afterEvaluate {
	// Build ProtoBuf sources manually
	mkdir file("Source/Proto")
	project.exec {
		workingDir = project(":module:com.sandpolis.core.proto").file("src/main/proto")
		commandLine = ["protoc", "--swift_out=" + file("Source/Proto"), *fileTree(workingDir).files.collect {
			workingDir.toPath().relativize(it.toPath())
		}]
	}
	project.exec {
		workingDir = project(":plugin:com.sandpolis.plugin.desktop").file("src/main/proto")
		commandLine = ["protoc", "--swift_out=" + file("Source/Proto"), *fileTree(workingDir).files.collect {
			workingDir.toPath().relativize(it.toPath())
		}]
	}
	project.exec {
		workingDir = project(":plugin:com.sandpolis.plugin.shell").file("src/main/proto")
		commandLine = ["protoc", "--swift_out=" + file("Source/Proto"), *fileTree(workingDir).files.collect {
			workingDir.toPath().relativize(it.toPath())
		}]
	}
	project.exec {
		workingDir = project(":plugin:com.sandpolis.plugin.filesys").file("src/main/proto")
		commandLine = ["protoc", "--swift_out=" + file("Source/Proto"), *fileTree(workingDir).files.collect {
			workingDir.toPath().relativize(it.toPath())
		}]
	}

	// Create empty xterm files to prevent build failure
	// TODO Download the npm package and extract instead
	mkdir file("Source/View/Terminal/Xterm")
	project.exec {
		commandLine = ["sh", "-c", "touch " + file("Source/View/Terminal/Xterm") + "/{xterm.js,xterm.css,fit.js}"]
	}
}
