//============================================================================//
//                                                                            //
//                Copyright Â© 2015 - 2020 Subterranean Security               //
//                                                                            //
//  This source file is subject to the terms of the Mozilla Public License    //
//  version 2. You may not use this file except in compliance with the MPL    //
//  as published by the Mozilla Foundation at:                                //
//                                                                            //
//    https://mozilla.org/MPL/2.0                                             //
//                                                                            //
//=========================================================S A N D P O L I S==//
syntax = "proto2";

package core.instance;

option java_package = "com.sandpolis.core.instance";
option optimize_for = CODE_SIZE;

/**
 * The Listener container.
 */
message ProtoListener {

    // The listener ID
    optional int64 id = 101;

    // An optional name for the listener
    optional string name = 102;

    // The listening port
    optional int32 port = 103;

    // The bind address
    optional string address = 104;

    // The username of the user that owns the listener
    optional string owner = 105;

    // Indicates whether automatic port forwarding with UPnP will be attempted
    optional bool upnp = 106;

    // Indicates whether client instances can be accepted by the listener
    optional bool client_acceptor = 107;

    // Indicates whether viewer instances can be accepted by the listener
    optional bool viewer_acceptor = 108;

    // Indicates whether the listener can be started
    optional bool enabled = 109;

    // Certificate
    optional bytes cert = 110;

    // Private key for the certificate
    optional bytes key = 111;

    // The listener's start timestamp
    optional int64 listen_timestamp = 1;

    // The number of currently active connections spawned from the listener
    optional int32 active_connections = 2;
}
