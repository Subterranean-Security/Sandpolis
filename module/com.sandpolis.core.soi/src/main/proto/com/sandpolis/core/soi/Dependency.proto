/*******************************************************************************
 *                                                                             *
 *                Copyright Â© 2015 - 2019 Subterranean Security                *
 *                                                                             *
 *  Licensed under the Apache License, Version 2.0 (the "License");            *
 *  you may not use this file except in compliance with the License.           *
 *  You may obtain a copy of the License at                                    *
 *                                                                             *
 *      http://www.apache.org/licenses/LICENSE-2.0                             *
 *                                                                             *
 *  Unless required by applicable law or agreed to in writing, software        *
 *  distributed under the License is distributed on an "AS IS" BASIS,          *
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   *
 *  See the License for the specific language governing permissions and        *
 *  limitations under the License.                                             *
 *                                                                             *
 ******************************************************************************/
syntax = "proto3";

package soi;
option java_package = "com.sandpolis.core.soi";

/**
 * The SO_DependencyMatrix object contains exhaustive dependency information about
 * each instance.
 */
message SO_DependencyMatrix {

	message Artifact {

		// The artifact's repository coordinates if applicable.
		string coordinates = 1;

		// The size of the artifact in bytes.
		int64 size = 2;

		/**
		 * An internal component of the artifact which is specific to a platform
		 * and system architecture.
		 */
		message NativeComponent {

			// The component's compatible platform.
			//util.OsType platform = 1;
			string platform = 1;

			// The component's compatible system architecture.
			//util.Architecture architecture = 2;
			string architecture = 2;

			// The component's internal path.
			string path = 3;

			// The component's size in bytes
			int64 size = 4;
		}

		// The artifact's internal native components.
		repeated NativeComponent native_component = 4;

		// A list of artifact IDs that this artifact directly depends on.
		repeated int32 dependency = 5;
	}

	// A list of every artifact where the artifact ID is its position in the list.
	repeated Artifact artifact = 1;

}
