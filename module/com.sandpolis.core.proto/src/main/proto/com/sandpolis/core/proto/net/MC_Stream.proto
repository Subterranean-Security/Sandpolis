/******************************************************************************
 *                                                                            *
 *                    Copyright 2016 Subterranean Security                    *
 *                                                                            *
 *  Licensed under the Apache License, Version 2.0 (the "License");           *
 *  you may not use this file except in compliance with the License.          *
 *  You may obtain a copy of the License at                                   *
 *                                                                            *
 *      http://www.apache.org/licenses/LICENSE-2.0                            *
 *                                                                            *
 *  Unless required by applicable law or agreed to in writing, software       *
 *  distributed under the License is distributed on an "AS IS" BASIS,         *
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *
 *  See the License for the specific language governing permissions and       *
 *  limitations under the License.                                            *
 *                                                                            *
 *****************************************************************************/
syntax = "proto3";

package net;
option java_package = "com.sandpolis.core.proto.net";

import "com/sandpolis/core/proto/pojo/Stream.proto";

message ProfileStreamParam {

}

message StreamParam {

	// Temporary
	enum Direction {
		FORWARD = 0;
		REVERSE = 1;
	}

	// The stream direction
	Direction direction = 2;
	
	oneof type {
		ProfileStreamParam profile = 3;
	}
}

/**
 * Request: Begin a new Stream
 */
message RQ_StreamStart {
	StreamParam param = 1;
}

/**
 * Request: rq_stream_start
 * Response:
 */
message RS_StreamStart {
	int32 streamID = 1;
}

/**
 * Request: Stop a Stream
 * Response: rs_outcome
 */
message RQ_StreamStop {

	// The ID of the stream to stop
	int32 streamID = 1;
}

message ProfileStreamData {
	int32 cvid = 1;
	string uuid = 2;
	string ip = 3; // Temporary
	bool online = 4;
}

/**
 *
 */
message EV_StreamData {

	// The stream ID
	int32 id = 1;
	
	oneof data {
		// Plugin stream data
		bytes plugin = 2;
		
		ProfileStreamData profile = 3;
	}
}
