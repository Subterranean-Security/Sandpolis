/*******************************************************************************
 *                                                                             *
 *                Copyright Â© 2015 - 2019 Subterranean Security                *
 *                                                                             *
 *  Licensed under the Apache License, Version 2.0 (the "License");            *
 *  you may not use this file except in compliance with the License.           *
 *  You may obtain a copy of the License at                                    *
 *                                                                             *
 *      http://www.apache.org/licenses/LICENSE-2.0                             *
 *                                                                             *
 *  Unless required by applicable law or agreed to in writing, software        *
 *  distributed under the License is distributed on an "AS IS" BASIS,          *
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   *
 *  See the License for the specific language governing permissions and        *
 *  limitations under the License.                                             *
 *                                                                             *
 ******************************************************************************/
syntax = "proto3";

package net;

import "com/sandpolis/core/proto/pojo/listener.proto";

option java_package = "com.sandpolis.core.proto.net";
option optimize_for = CODE_SIZE;

/**
 * Request to create a new listener.
 */
message RQ_AddListener {
    pojo.ListenerConfig config = 1;
}

/**
 * Request to remove a listener.
 */
message RQ_RemoveListener {

    // The ID of the listener to remove
    int64 id = 1;
}

/**
 * Request to change a listener's config or stats.
 */
message RQ_ListenerDelta {

    // The ID of the listener to modify
    int64 id = 1;

    pojo.ProtoListener delta = 2;
}

/**
 * Request to change a listener's state
 */
message RQ_ChangeListener {
    enum ListenerState {

        // A listener that is bound to a port and is accepting connections
        LISTENING = 0;

        // A listener that is unbound and not accepting connections
        INACTIVE = 1;
    }

    // The ID of the listener to modify
    int64 id = 1;

    // The new state
    ListenerState state = 2;
}
