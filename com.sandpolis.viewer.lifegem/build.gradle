//============================================================================//
//                                                                            //
//                Copyright Â© 2015 - 2020 Subterranean Security               //
//                                                                            //
//  This source file is subject to the terms of the Mozilla Public License    //
//  version 2. You may not use this file except in compliance with the MPL    //
//  as published by the Mozilla Foundation at:                                //
//                                                                            //
//    https://mozilla.org/MPL/2.0                                             //
//                                                                            //
//=========================================================S A N D P O L I S==//

plugins {
	id 'eclipse'
	id 'java-library'

	id 'com.sandpolis.gradle.soi'
	id 'org.openjfx.javafxplugin' version '0.0.8'
	id 'com.bmuschko.docker-remote-api' version '6.3.0'
}

apply plugin: 'com.sandpolis.gradle.codegen'

javafx {
	modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.graphics' ]
	version = "14"
}

eclipse {
	project {
		name = 'com.sandpolis.viewer.lifegem'
		comment = 'The JavaFX viewer instance'
	}
}

sourceSets {
	main {
		java {
			srcDirs 'gen/main/java'
		}
	}
}

dependencies {
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.1'
	testImplementation 'org.testfx:testfx-core:4.0.16-alpha'
	testImplementation 'org.testfx:testfx-junit5:4.0.16-alpha'
	testImplementation 'org.testfx:openjfx-monocle:jdk-12.0.1+2'
	testImplementation 'org.awaitility:awaitility:4.0.1'

	implementation project(':module:com.sandpolis.core.instance')
	implementation project(':module:com.sandpolis.core.ipc')
	implementation project(':module:com.sandpolis.core.net')
	implementation project(':module:com.sandpolis.core.soi')
	implementation project(':module:com.sandpolis.core.util')
	implementation project(':module:com.sandpolis.core.viewer')

	// https://github.com/sirolf2009/fxgraph
	implementation 'com.sirolf2009:fxgraph:0.0.3'

	// https://commons.apache.org/proper/commons-validator
	implementation 'commons-validator:commons-validator:1.6'

	// https://github.com/netty/netty
	implementation 'io.netty:netty-common:4.1.50.Final'
	implementation 'io.netty:netty-codec:4.1.48.Final'
	implementation 'io.netty:netty-transport:4.1.48.Final'
	implementation 'io.netty:netty-handler:4.1.48.Final'

	// https://github.com/javaee/jpa-spec
	implementation 'javax.persistence:javax.persistence-api:2.2'
}

task dockerSyncBuildContext(type: Sync, dependsOn: jar) {
	from configurations.runtimeClasspath, jar
	into "${buildDir}/docker/lib"
}

task dockerBuildImage(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage, dependsOn: dockerSyncBuildContext) {
	inputDir = file('.')
	images = ["sandpolis/viewer/lifegem:${project.version}", "sandpolis/viewer/lifegem:latest"]
}

codegen {
	attributeSpec = project(':module:com.sandpolis.core.instance').file('attribute.json')
	documentBindings = 'javafx'
}
