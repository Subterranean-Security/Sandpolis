//============================================================================//
//                                                                            //
//                Copyright Â© 2015 - 2020 Subterranean Security               //
//                                                                            //
//  This source file is subject to the terms of the Mozilla Public License    //
//  version 2. You may not use this file except in compliance with the MPL    //
//  as published by the Mozilla Foundation at:                                //
//                                                                            //
//    https://mozilla.org/MPL/2.0                                             //
//                                                                            //
//=========================================================S A N D P O L I S==//

plugins {
	id 'eclipse'
	id 'java-library'

	id 'org.openjfx.javafxplugin' version '0.0.8'
	id "com.github.breadmoirai.github-release" version "2.2.9"
	id 'edu.sc.seis.launch4j' version '2.4.6'
	id 'org.javamodularity.moduleplugin' version '1.5.0'
}

javafx {
	version = '13.0.1'
	modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.graphics' ]
	configuration = 'compileOnly'
}

eclipse {
	project {
		name = 'com.sandpolis.installer'
		comment = 'The installer instance'
	}
}

configurations {
	internal
	installTargets
	windows
	linux
	mac

	windows.extendsFrom(runtimeClasspath)
	linux.extendsFrom(runtimeClasspath)
	mac.extendsFrom(runtimeClasspath)
}

dependencies {
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.5.2'

	api project(':module:com.sandpolis.core.soi')
	api project(':module:com.sandpolis.core.util')

	// https://github.com/cilki/CompactClassLoader
	internal 'com.github.cilki:compact-classloader:1.3.1'

	// https://github.com/qos-ch/logback
	api 'ch.qos.logback:logback-core:1.2.3'
	api 'ch.qos.logback:logback-classic:1.2.3'

	// https://github.com/google/guava
	api 'com.google.guava:guava:28.1-jre'

	// https://github.com/nayuki/QR-Code-generator
	api 'io.nayuki:qrcodegen:1.5.0'

	// https://github.com/qos-ch/slf4j
	api 'org.slf4j:slf4j-api:1.7.30'

	// https://github.com/DmitriiShamrikov/mslinks
	compileOnly 'com.github.vatbub:mslinks:1.0.5'
	windows 'com.github.vatbub:mslinks:1.0.5'

	// Installation targets
	installTargets project(':com.sandpolis.server.vanilla')
	installTargets project(':com.sandpolis.viewer.jfx')
	installTargets project(':com.sandpolis.viewer.cli')
	installTargets project(':com.sandpolis.client.mega')

	// JavaFX runtimes
	windows 'org.openjfx:javafx-base:13.0.1:win'
	windows 'org.openjfx:javafx-fxml:13.0.1:win'
	windows 'org.openjfx:javafx-graphics:13.0.1:win'
	windows 'org.openjfx:javafx-controls:13.0.1:win'

	linux 'org.openjfx:javafx-base:13.0.1:linux'
	linux 'org.openjfx:javafx-fxml:13.0.1:linux'
	linux 'org.openjfx:javafx-graphics:13.0.1:linux'
	linux 'org.openjfx:javafx-controls:13.0.1:linux'

	mac 'org.openjfx:javafx-base:13.0.1:mac'
	mac 'org.openjfx:javafx-fxml:13.0.1:mac'
	mac 'org.openjfx:javafx-graphics:13.0.1:mac'
	mac 'org.openjfx:javafx-controls:13.0.1:mac'
}

jar {
	from configurations.internal.collect {zipTree(it)}
}

task jarOnlineWin(type: Jar, dependsOn: jar) {
	archiveBaseName = "SandpolisInstaller-win"
	manifest {
		attributes(
			'Main-Class': 'com.github.cilki.compact.BootProxy',
			'Boot-Class': 'com.sandpolis.installer.Main',
			'Compact-Class-Path': configurations.windows
				.collect { it.getName() }
				.join(' ')
		)
	}

	from zipTree(jar.archiveFile)
	from configurations.windows
}

task jarOnlineLin(type: Jar, dependsOn: jar) {
	archiveBaseName = "SandpolisInstaller-linux"
	manifest {
		attributes(
			'Main-Class': 'com.github.cilki.compact.BootProxy',
			'Boot-Class': 'com.sandpolis.installer.Main',
			'Compact-Class-Path': configurations.linux
				.collect { it.getName() }
				.join(' ')
		)
	}

	from zipTree(jar.archiveFile)
	from configurations.linux
}

task jarOnlineMac(type: Jar, dependsOn: jar) {
	archiveBaseName = "SandpolisInstaller-mac"
	manifest {
		attributes(
			'Main-Class': 'com.github.cilki.compact.BootProxy',
			'Boot-Class': 'com.sandpolis.installer.Main',
			'Compact-Class-Path': configurations.mac
				.collect { it.getName() }
				.join(' ')
		)
	}

	from zipTree(jar.archiveFile)
	from configurations.mac
}

artifacts {
	archives jarOnlineWin
	archives jarOnlineLin
	archives jarOnlineMac
}

launch4j {
	outfile = "SandpolisInstaller-win-${project.version}.exe"
	mainClassName = 'com.sandpolis.installer.Main'
	headerType = 'gui'
	stayAlive = 'true'
	companyName = 'Subterranean Security'
	productName = 'Sandpolis Installer'
	windowTitle = 'Sandpolis Installer'
	version = "0.${SANDPOLIS_VERSION}"
	textVersion = "0.${SANDPOLIS_VERSION}"
	jar = jarOnlineWin.archiveFile
	copyConfigurable = jarOnlineWin
	icon = "${projectDir}/sandpolis.ico"
}
tasks.createExe.dependsOn(jarOnlineWin)

githubRelease {
	token = GITHUB_TOKEN
	owner = 'Subterranean-Security'
	repo = 'Sandpolis'
	draft = true
	prerelease = true
	releaseAssets = {[
		// TODO Classpath isn't handled properly with launch4j
		// project.file("build/launch4j/${launch4j.outfile}"),
		jarOnlineWin.archiveFile,
		jarOnlineLin.archiveFile,
		jarOnlineMac.archiveFile,
	]}
}
tasks.githubRelease.dependsOn(assemble)
//tasks.githubRelease.dependsOn(createExe)
