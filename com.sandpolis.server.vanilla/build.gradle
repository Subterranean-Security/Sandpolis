/*******************************************************************************
* SANDPOLIS                                                                    *
* com.sandpolis.server.vanilla                                                 *
*******************************************************************************/

plugins {
	id 'eclipse'
	id 'java-library'
	id 'application'

	id 'com.sandpolis.gradle.soi'
	id 'com.sandpolis.gradle.deploy'
	id 'com.bmuschko.docker-java-application' version '6.0.0'
	id 'org.javamodularity.moduleplugin' version '1.5.0'
	id 'org.beryx.jlink' version '2.16.4'
}

eclipse {
	project {
		name = 'com.sandpolis.server.vanilla'
		comment = 'The server instance'
	}
}

dependencies {
	testImplementation project(path: ':module:com.sandpolis.core.net', configuration: 'tests')
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.5.2'

	implementation project(':com.sandpolis.client.mega')
	api project(':module:com.sandpolis.core.instance')
	api project(':module:com.sandpolis.core.ipc')
	api project(':module:com.sandpolis.core.net')
	api project(':module:com.sandpolis.core.profile')
	api project(':module:com.sandpolis.core.proto')
	api project(':module:com.sandpolis.core.soi')
	api project(':module:com.sandpolis.core.storage.hibernate')
	api project(':module:com.sandpolis.core.stream')
	api project(':module:com.sandpolis.core.util')

	// Core plugins
	implementation project(':plugin:com.sandpolis.plugin.desktop')
	implementation project(':plugin:com.sandpolis.plugin.shell')
	implementation project(':plugin:com.sandpolis.plugin.sysinfo')
	implementation project(':plugin:com.sandpolis.plugin.filesys')

	// https://github.com/FasterXML/jackson-databind
	api 'com.fasterxml.jackson.core:jackson-databind:2.10.1'

	// https://github.com/google/guava
	api 'com.google.guava:guava:28.1-jre'

	// https://github.com/h2database/h2database
	api 'com.h2database:h2:1.4.200'

	// https://github.com/netty/netty
	api 'io.netty:netty-codec:4.1.43.Final'
	api 'io.netty:netty-common:4.1.43.Final'
	api 'io.netty:netty-handler:4.1.43.Final'
	api 'io.netty:netty-transport:4.1.43.Final'

	api 'javax.persistence:javax.persistence-api:2.2'

	// https://github.com/hibernate/hibernate-orm
	api 'org.hibernate:hibernate-core:5.4.9.Final'

	// https://github.com/qos-ch/slf4j
	api 'org.slf4j:slf4j-api:1.7.29'

	// https://github.com/cilki/zipset
	api 'com.github.cilki:zipset:1.2.1'
}

project.evaluationDependsOn(":com.sandpolis.client.installer:jar")
project.evaluationDependsOn(":com.sandpolis.client.installer:py")

jar {
	from (project(':com.sandpolis.client.installer:jar').tasks.getByName('jar').outputs) {
		into "lib"
	}
	from (project(':com.sandpolis.client.installer:py').file('src/sandpolis-client-installer.py')) {
		into "lib"
	}
}

mainClassName = 'com.sandpolis.server.vanilla/com.sandpolis.server.vanilla.Main'

docker {
	javaApplication {
		baseImage = 'openjdk:12.0.2'
		maintainer = 'tcc@sandpolis.com'
		tag = "sandpolis/sandpolis-server:${project.version}"
		jvmArgs = [
			'-Dpath.lib=/app/libs',
			'-Dserver.path.gen=/tmp',
			'-Dserver.debug_client=false',
			'-Dnet.ipc.mutex=false'
		]
	}
}

deploy {
	jvmArgs = [
		'-Dlogging.net.traffic.raw=false',
		'-Dlogging.net.traffic.decoded=false',
		'-Dnet.connection.tls=true',
		'-Dplugin.enabled=true',
		'-m com.sandpolis.server.vanilla/com.sandpolis.server.vanilla.Main'
	]
}

jlink {
	options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
	launcher{
		name = 'test'
	}

	mergedModule {
		uses 'javax.persistence.spi.PersistenceProvider';
		provides 'javax.persistence.spi.PersistenceProvider' with 'org.hibernate.jpa.HibernatePersistenceProvider';
	}
}
