//============================================================================//
//                                                                            //
//                Copyright Â© 2015 - 2020 Subterranean Security               //
//                                                                            //
//  This source file is subject to the terms of the Mozilla Public License    //
//  version 2. You may not use this file except in compliance with the MPL    //
//  as published by the Mozilla Foundation at:                                //
//                                                                            //
//    https://mozilla.org/MPL/2.0                                             //
//                                                                            //
//=========================================================S A N D P O L I S==//

buildscript {
	dependencies {
		classpath "org.hibernate:hibernate-gradle-plugin:5.4.14.Final"
	}
}

plugins {
	id 'eclipse'
	id 'java-library'

	id 'com.sandpolis.gradle.soi'
	id 'com.bmuschko.docker-remote-api' version '6.6.0'
	id 'de.jjohannes.extra-java-module-info' version '0.1'
}

apply plugin: 'org.hibernate.orm'

eclipse {
	project {
		name = 'com.sandpolis.server.vanilla'
		comment = 'The server instance'
	}
}

// TODO remove
extraJavaModuleInfo {
	automaticModule("java-otp-0.2.0.jar", "java.otp")
	automaticModule("hibernate-ogm-mongodb-5.4.1.Final.jar", "hibernate.ogm.mongodb")
	module("hibernate-ogm-core-5.4.1.Final.jar", "hibernate.ogm.core", "5.4.1")
	automaticModule("hibernate-hql-parser-1.5.0.Final.jar", "hibernate.hql.parser")
	automaticModule("mongo-java-driver-3.9.1.jar", "mongo.java.driver")
	automaticModule("antlr-runtime-3.4.jar", "antlr.runtime")
	module("parboiled-core-1.1.8.jar", "parboiled.core", "1.1.8")
	module("parboiled-java-1.1.8.jar", "parboiled.java", "1.1.8")
	automaticModule("asm-analysis-5.2.jar", "asm.analysis")
	automaticModule("asm-util-5.2.jar", "asm.util")
	automaticModule("asm-tree-5.2.jar", "asm.tree")
	automaticModule("asm-5.2.jar", "asm")
	automaticModule("javassist-3.23.1-GA.jar", "javassist")
	automaticModule("stringtemplate-3.2.1.jar", "stringtemplate")
	automaticModule("antlr-2.7.7.jar", "antlr")
	automaticModule("jandex-2.0.5.Final.jar", "jandex")
	automaticModule("dom4j-1.6.1.jar", "dom4j")
	automaticModule("failureaccess-1.0.1.jar", "failureaccess")
	automaticModule("checker-framework-1.7.0.jar", "checker.framework")
}

dependencies {
	testImplementation project(path: ':module:com.sandpolis.core.net', configuration: 'tests')
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.1'

	implementation project(':module:com.sandpolis.core.server')

	// https://github.com/hibernate/hibernate-ogm
	implementation 'org.hibernate.ogm:hibernate-ogm-mongodb:5.4.1.Final'

	// https://github.com/netty/netty
	implementation 'io.netty:netty-codec:4.1.48.Final'
	implementation 'io.netty:netty-common:4.1.48.Final'
	implementation 'io.netty:netty-handler:4.1.51.Final'
	implementation 'io.netty:netty-transport:4.1.48.Final'
}

project.evaluationDependsOn(":com.sandpolis.client.installer:jar")
project.evaluationDependsOn(":com.sandpolis.client.installer:py")

jar {
	from (project(':com.sandpolis.client.installer:jar').tasks.getByName('jar').outputs) {
		into "lib"
	}
	from (project(':com.sandpolis.client.installer:py').file('src/sandpolis-client-installer.py')) {
		into "lib"
	}
}

task dockerSyncBuildContext(type: Sync, dependsOn: jar) {
	from configurations.runtimeClasspath, jar
	into "${buildDir}/docker/lib"
}

task dockerBuildImage(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage, dependsOn: dockerSyncBuildContext) {
	inputDir = file('.')
	images = ["sandpolis/server/vanilla:${project.version}", "sandpolis/server/vanilla:latest"]
}

hibernate {
	enhance {
		enableLazyInitialization= true
		enableDirtyTracking = true
		enableAssociationManagement = true
		enableExtendedEnhancement = false
	}
}
