/******************************************************************************
 *                                                                            *
 *                    Copyright 2016 Subterranean Security                    *
 *                                                                            *
 *  Licensed under the Apache License, Version 2.0 (the "License");           *
 *  you may not use this file except in compliance with the License.          *
 *  You may obtain a copy of the License at                                   *
 *                                                                            *
 *      http://www.apache.org/licenses/LICENSE-2.0                            *
 *                                                                            *
 *  Unless required by applicable law or agreed to in writing, software       *
 *  distributed under the License is distributed on an "AS IS" BASIS,         *
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *
 *  See the License for the specific language governing permissions and       *
 *  limitations under the License.                                            *
 *                                                                            *
 *****************************************************************************/
syntax = "proto3";

package net;
option java_package = "com.sandpolis.core.proto.net";

import "com/sandpolis/core/proto/util/Listener.proto";

/**
 * Request to create a new listener
 */
message RQ_AddListener {
	util.ListenerConfig config = 1;
}

/**
 * Request to remove a listener
 */
message RQ_RemoveListener {
	int32 id = 1;
}

/**
 * Request to change a listener's state
 */
message RQ_ChangeListenerState {
	enum ListenerState {
		// A listener which is bound to the relevant port and is accepting connections
		ACTIVE = 0;
		
		// A listener which is bound, but not accepting connections
		CLOSED = 1;
		
		// A listener which is unbound
		INACTIVE = 2;

	}
	
	// One or more listeners to be altered
	repeated int32 id = 1;
	
	// The new state
	ListenerState state = 2;
}