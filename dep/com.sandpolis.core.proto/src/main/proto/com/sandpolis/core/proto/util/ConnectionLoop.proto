/******************************************************************************
 *                                                                            *
 *                    Copyright 2016 Subterranean Security                    *
 *                                                                            *
 *  Licensed under the Apache License, Version 2.0 (the "License");           *
 *  you may not use this file except in compliance with the License.          *
 *  You may obtain a copy of the License at                                   *
 *                                                                            *
 *      http://www.apache.org/licenses/LICENSE-2.0                            *
 *                                                                            *
 *  Unless required by applicable law or agreed to in writing, software       *
 *  distributed under the License is distributed on an "AS IS" BASIS,         *
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *
 *  See the License for the specific language governing permissions and       *
 *  limitations under the License.                                            *
 *                                                                            *
 *****************************************************************************/
syntax = "proto3";

package util;
option java_package = "com.sandpolis.core.proto.util";

import "com/sandpolis/core/proto/util/Generator.proto";

/**
 * A LoopConfig contains all parameters and information needed to establish a
 * new connection with a ConnectionLoop.
 */
message LoopConfig {

	// The list of network targets to attempt
	repeated NetworkTarget network_target = 1;
	
	// Indicates whether strict certificate checking will be enabled
	bool strict_certs = 2;
	
	// The maximum number of conenction iterations to attempt in the worst case
	int32 max_iterations = 3;
	
	// The initial connection timeout
	int32 timeout = 4;
	
	// The maximum connection timeout
	int32 max_timeout = 5;
	
	// The timeout smoothing factor which determines how quickly the maximum
	// timeout is reached
	double timeout_flatness = 6;
}